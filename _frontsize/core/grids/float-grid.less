
.addFloatGridContainer(
    @selector                 : row,
    @hdFullSteps              : 0,
    @hdReadySteps             : @hdFullSteps,
    @tabletLandscapeSteps     : @hdReadySteps,
    @tabletPortraitSteps      : @tabletLandscapeSteps,
    @smartphoneLandscapeSteps : 1,
    @smartphonePortraitSteps  : 1
    ) {

    .@{selector},
    .@{selector} * {
        .box-sizing(border-box);
    }
    .@{selector} {
        display:     block;
        padding-top: @vertical-padding;
        overflow:    auto;
        clear:       both;
    }
    ._checkAutoClear(@hdFullSteps, @hdReadySteps, @tabletLandscapeSteps, @tabletPortraitSteps, @smartphoneLandscapeSteps, @smartphonePortraitSteps, @selector);
}

.setFloatGridContainer(
    @hdFullSteps              : 0,
    @hdReadySteps             : @hdFullSteps,
    @tabletLandscapeSteps     : @hdReadySteps,
    @tabletPortraitSteps      : @tabletLandscapeSteps,
    @smartphoneLandscapeSteps : 1,
    @smartphonePortraitSteps  : 1,
    @paddingTop               : false
    ) {

    display:  block;
    overflow: auto;
    clear:    both;
    .property(padding-top, @paddingTop, false);

    * {
        .box-sizing(border-box);
    }
}

.setFloatGridColumn(
    @hdFullSteps          : 12,
    @hdReadySteps         : @hdFullSteps,
    @tabletLandscapeSteps : @hdFullSteps,
    @tabletPortraitSteps  : 12,
    @mobileLandscapeSteps : 12,
    @mobilePortraitSteps  : 12,
    @columns              : 12
    ) {

    ._setFloatGridViewportStep(@only-smartphone-portrait,  @mobilePortraitSteps,  @columns);
    ._setFloatGridViewportStep(@only-smartphone-landscape, @mobileLandscapeSteps, @columns);
    ._setFloatGridViewportStep(@only-tablet-portrait,      @tabletPortraitSteps,  @columns);
    ._setFloatGridViewportStep(@only-tablet-landscape,     @tabletLandscapeSteps, @columns);
    ._setFloatGridViewportStep(@only-hd-ready,             @hdReadySteps,         @columns);
    ._setFloatGridViewportStep(@only-hd-full,              @hdFullSteps,          @columns);
}

._setFloatGridViewportStep(@viewport, @step, @columns:12) {
    @media @viewport {
        ._setFloatGridColumnStep(@step, @columns)
    }
}

.addFloatGridColumns(
    @hdSteps                  : 12,
    @tabletSteps              : @hdSteps,
    @smartphoneSteps          : @tabletSteps,
    @hdViewportPrefix         : hd-,
    @tabletViewportPrefix     : tablet-,
    @smartphoneViewportPrefix : smartphone-,
    @fillFromViewport         : "smartphone-landscape",
    @viewTotalColumns         : true,
    @columnsSeparator         : -of-,
    @useHdRules               : true,
    @useTabletRules           : true,
    @useSmartphoneRules       : true
    ) {

    @media @from-smartphone-portrait {
        // Smartphone portrait
        ._addFloatGridColumnSet(@hdViewportPrefix, @hdSteps, @viewTotalColumns, @columnsSeparator);
        ._addFloatGridColumnSet(@tabletViewportPrefix, @tabletSteps, @viewTotalColumns, @columnsSeparator);
        ._addFloatGridColumnSet(@smartphoneViewportPrefix, @smartphoneSteps, @viewTotalColumns, @columnsSeparator);
    }

    @media @from-tablet-portrait {
        // Tablet portrait
        ._addFloatGridColumnSet(@smartphoneViewportPrefix, @smartphoneSteps, @viewTotalColumns, @columnsSeparator);
        ._addFloatGridColumnSet(@hdViewportPrefix, @hdSteps, @viewTotalColumns, @columnsSeparator);
        ._addFloatGridColumnSet(@tabletViewportPrefix, @tabletSteps, @viewTotalColumns, @columnsSeparator);
    }

    @media @from-hd-ready {
        // HD Ready
        ._addFloatGridColumnSet(@smartphoneViewportPrefix, @smartphoneSteps, @viewTotalColumns, @columnsSeparator);
        ._addFloatGridColumnSet(@tabletViewportPrefix, @tabletSteps, @viewTotalColumns, @columnsSeparator);
        ._addFloatGridColumnSet(@hdViewportPrefix, @hdSteps, @viewTotalColumns, @columnsSeparator);
    }

    ._addClearRule(@only-smartphone, @smartphoneViewportPrefix);
    ._addClearRule(@only-tablet, @tabletViewportPrefix);
    ._addClearRule(@only-hd, @hdViewportPrefix);

    ._addFillToColumnSet(@tabletViewportPrefix, @tabletSteps, @fillFromViewport, @viewTotalColumns, @columnsSeparator);
    ._addFillToColumnSet(@hdViewportPrefix, @hdSteps, @fillFromViewport, @viewTotalColumns, @columnsSeparator);
    ._preventSmartphoneColumnSet(@smartphoneViewportPrefix, @smartphoneSteps, @viewTotalColumns, @columnsSeparator);
}

._addClearRule(@rule, @prefix) {
    @media @rule {
        .@{prefix}clear {
            clear: both;
        }
    }
}

.addFloatGridOffset(
    @hdSteps                  : 12,
    @tabletSteps              : @hdSteps,
    @smartphoneSteps          : @tabletSteps,
    @hdViewportPrefix         : hd-offset-,
    @tabletViewportPrefix     : tablet-offset-,
    @smartphoneViewportPrefix : smartphone-offset-,
    @fillFromViewport         : "smartphone-landscape",
    @viewTotalColumns         : true,
    @columnsSeparator         : -of-,
    @useHdRules               : true,
    @useTabletRules           : true,
    @useSmartphoneRules       : true
    ) {

    @media @from-smartphone-portrait {
        // Smartphone portrait
        ._addColumnMarginOffset(@hdViewportPrefix, @hdSteps, @viewTotalColumns, @columnsSeparator);
        ._addColumnMarginOffset(@tabletViewportPrefix, @tabletSteps, @viewTotalColumns, @columnsSeparator);
        ._addColumnMarginOffset(@smartphoneViewportPrefix, @smartphoneSteps, @viewTotalColumns, @columnsSeparator);

        .@{smartphoneViewportPrefix}disabled {
            margin-left: 0;
        }
    }

    @media @from-tablet-portrait {
        // Tablet portrait
        ._addColumnMarginOffset(@smartphoneViewportPrefix, @smartphoneSteps, @viewTotalColumns, @columnsSeparator);
        ._addColumnMarginOffset(@hdViewportPrefix, @hdSteps, @viewTotalColumns, @columnsSeparator);
        ._addColumnMarginOffset(@tabletViewportPrefix, @tabletSteps, @viewTotalColumns, @columnsSeparator);
    }

    @media @from-hd-ready {
        // HD Ready
        ._addColumnMarginOffset(@smartphoneViewportPrefix, @smartphoneSteps, @viewTotalColumns, @columnsSeparator);
        ._addColumnMarginOffset(@tabletViewportPrefix, @tabletSteps, @viewTotalColumns, @columnsSeparator);
        ._addColumnMarginOffset(@hdViewportPrefix, @hdSteps, @viewTotalColumns, @columnsSeparator);
    }

    @media @only-hd {
        .@{hdViewportPrefix}disabled {
            margin-left: 0;
        }
    }

    @media @only-tablet {
        .@{tabletViewportPrefix}disabled {
            margin-left: 0;
        }
    }
}

._checkAutoClear(
    @hdFullSteps,
    @hdReadySteps,
    @tabletLandscapeSteps,
    @tabletPortraitSteps,
    @smartphoneLandscapeSteps,
    @smartphonePortraitSteps,
    @selector
    ) when (@hdFullSteps > 0) {
    // Media queries for selectors active from a specific resolution or higher
    .@{selector} > * {
        min-height: 1px;
        ._setColumnBehavior();
        ._setFloatGridColumnStep(1, @hdFullSteps);
    }

    ._checkAutoClearViewport(@only-smartphone-portrait,  @smartphonePortraitSteps,  @selector);
    ._checkAutoClearViewport(@only-smartphone-landscape, @smartphoneLandscapeSteps, @selector);
    ._checkAutoClearViewport(@only-tablet-portrait,      @tabletPortraitSteps,      @selector);
    ._checkAutoClearViewport(@only-tablet-landscape,     @tabletLandscapeSteps,     @selector);
    ._checkAutoClearViewport(@only-hd-ready,             @hdReadySteps,             @selector);
    ._checkAutoClearViewport(@only-hd-full,              @hdFullSteps,              @selector);

}

._checkAutoClearViewport(@viewport, @steps, @selector) {
    @media @viewport {
        .@{selector} > * {
            ._setFloatGridColumns(@steps);
        }
    }
}

._addFloatGridColumnSet(@prefix:col-, @totalSteps:12, @viewTotalColumns:true, @columnsSeparator:-of-) {
    @startIndex : @totalSteps;
    ._loopFloatGridColumnSet(@totalSteps, @prefix, @startIndex, ~"", @viewTotalColumns, @columnsSeparator);
}

._addFillToColumnSet(@prefix, @totalSteps, @fillViewport:"smartphone-landscape", @viewTotalColumns:true, @columnsSeparator:-of-) {
    @startIndex : @totalSteps;
    ._loopFloatGridColumnSetFill(@prefix, @totalSteps, @fillViewport, @startIndex, @viewTotalColumns, @columnsSeparator);
}

._preventSmartphoneColumnSet(@prefix:col-, @totalSteps:12, @viewTotalColumns:true, @columnsSeparator:-of-) when (@use-smartphone-landscape = true) {
    @startIndex : @totalSteps;
    @media @till-tablet-portrait {
        // Smartphone landscape
        ._loopSmartphoneColumnSet(@prefix, @totalSteps, @startIndex, @viewTotalColumns, @columnsSeparator);
    }
}

._loopFloatGridColumnSet (@total, @prefix, @index, @prevRule:~"", @viewTotalColumns, @columnsSeparator) when (@index = @total) and (@viewTotalColumns = true) {
    @nextRule : ~".@{prefix}@{index}@{columnsSeparator}@{total}";
    ._loopFloatGridColumnSet(@total, @prefix, @index - 1, @nextRule, @viewTotalColumns, @columnsSeparator);
}._loopFloatGridColumnSet (@total, @prefix, @index, @prevRule:~"", @viewTotalColumns, @columnsSeparator) when (@index > 0) and (@index < @total) and (@viewTotalColumns = true) {
    @nextRule : ~"@{prevRule}, .@{prefix}@{index}@{columnsSeparator}@{total}";
    ._loopFloatGridColumnSet(@total, @prefix, @index - 1, @nextRule, @viewTotalColumns, @columnsSeparator);
}._loopFloatGridColumnSet (@total, @prefix, @index, @prevRule:~"", @viewTotalColumns, @columnsSeparator) when (@index > 0) and (@viewTotalColumns = true) {
    .@{prefix}@{index}@{columnsSeparator}@{total} {
        ._setFloatGridColumnStep(@index, @total);
    }
}._loopFloatGridColumnSet (@total, @prefix, @index, @prevRule:~"", @viewTotalColumns, @columnsSeparator) when (@index = 0) and (@viewTotalColumns = true) {
    @{prevRule} {
        ._setColumnBehavior();
    }
}
._loopFloatGridColumnSet (@total, @prefix, @index, @prevRule:~"", @viewTotalColumns, @columnsSeparator) when (@index = @total) and (@viewTotalColumns = false) {
    @nextRule : ~".@{prefix}@{index}";
    ._loopFloatGridColumnSet(@total, @prefix, @index - 1, @nextRule, @viewTotalColumns, @columnsSeparator);
}._loopFloatGridColumnSet (@total, @prefix, @index, @prevRule:~"", @viewTotalColumns, @columnsSeparator) when (@index > 0) and (@index < @total) and (@viewTotalColumns = false) {
    @nextRule : ~"@{prevRule}, .@{prefix}@{index}";
    ._loopFloatGridColumnSet(@total, @prefix, @index - 1, @nextRule, @viewTotalColumns, @columnsSeparator);
}._loopFloatGridColumnSet (@total, @prefix, @index, @prevRule:~"", @viewTotalColumns, @columnsSeparator) when (@index > 0) and (@viewTotalColumns = false) {
    .@{prefix}@{index} {
        ._setFloatGridColumnStep(@index, @total);
    }
}._loopFloatGridColumnSet (@total, @prefix, @index, @prevRule:~"", @viewTotalColumns, @columnsSeparator) when (@index = 0) and (@viewTotalColumns = false) {
    @{prevRule} {
        ._setColumnBehavior();
    }
}

._addColumnMarginOffset(@prefix:col-, @totalSteps:12, @viewTotalColumns:true, @columnsSeparator:-of-) {
    @startIndex: @totalSteps;
    ._loopColumnMarginOffset(@totalSteps, @prefix, @startIndex, ~"", @viewTotalColumns, @columnsSeparator);
}

._loopColumnMarginOffset (@total, @prefix, @index, @prevRule:~"", @viewTotalColumns, @columnsSeparator) when (@index = @total) and (@viewTotalColumns = true) {
    @nextRule : ~".@{prefix}@{index}@{columnsSeparator}@{total}";
    ._loopColumnMarginOffset(@total, @prefix, @index - 1, @nextRule, @viewTotalColumns, @columnsSeparator);
}._loopColumnMarginOffset (@total, @prefix, @index, @prevRule:~"", @viewTotalColumns, @columnsSeparator) when (@index > 0) and (@index < @total) and (@viewTotalColumns = true) {
    @nextRule : ~"@{prevRule}, .@{prefix}@{index}@{columnsSeparator}@{total}";
    ._loopColumnMarginOffset(@total, @prefix, @index - 1, @nextRule, @viewTotalColumns, @columnsSeparator);
}._loopColumnMarginOffset (@total, @prefix, @index, @prevRule:~"", @viewTotalColumns, @columnsSeparator) when (@index > 0) and (@viewTotalColumns = true) {
    .@{prefix}@{index}@{columnsSeparator}@{total} {
        ._setColumnMarginOffsetStep(@index, @total);
    }
}._loopColumnMarginOffset (@total, @prefix, @index, @prevRule:~"", @viewTotalColumns, @columnsSeparator) when (@index = 0) and (@viewTotalColumns = true) {
    //@{prevRule} {
    //    ._setColumnBehavior();
    //}
}
._loopColumnMarginOffset (@total, @prefix, @index, @prevRule:~"", @viewTotalColumns, @columnsSeparator) when (@index = @total) and (@viewTotalColumns = false) {
    @nextRule : ~".@{prefix}@{index}";
    ._loopColumnMarginOffset(@total, @prefix, @index - 1, @nextRule, @viewTotalColumns, @columnsSeparator);
}._loopColumnMarginOffset (@total, @prefix, @index, @prevRule:~"", @viewTotalColumns, @columnsSeparator) when (@index > 0) and (@index < @total) and (@viewTotalColumns = false) {
    @nextRule : ~"@{prevRule}, .@{prefix}@{index}";
    ._loopColumnMarginOffset(@total, @prefix, @index - 1, @nextRule, @viewTotalColumns, @columnsSeparator);
}._loopColumnMarginOffset (@total, @prefix, @index, @prevRule:~"", @viewTotalColumns, @columnsSeparator) when (@index > 0) and (@viewTotalColumns = false) {
    .@{prefix}@{index} {
        ._setColumnMarginOffsetStep(@index, @total);
    }
}._loopColumnMarginOffset (@total, @prefix, @index, @prevRule:~"", @viewTotalColumns, @columnsSeparator) when (@index = 0) and (@viewTotalColumns = false) {
    //@{prevRule} {
    //    ._setColumnBehavior();
    //}
}

._setColumnMarginOffsetStep(@step, @columns) {
    margin-left:((100% * @step)/@columns);
}

._loopSmartphoneColumnSet(@prefix, @total, @index, @viewTotalColumns, @columnsSeparator) when (@index > 0) and (@viewTotalColumns = true) {
    .@{prefix}@{index}@{columnsSeparator}@{total} {
        ._setFloatGridColumnStep(@index, @total);
    }
    ._loopSmartphoneColumnSet(@prefix, @total, @index - 1, @viewTotalColumns, @columnsSeparator);
}._loopSmartphoneColumnSet(@prefix, @total, @index, @viewTotalColumns, @columnsSeparator) when (@index > 0) and (@viewTotalColumns = false) {
    .@{prefix}@{index} {
        ._setFloatGridColumnStep(@index, @total);
    }
    ._loopSmartphoneColumnSet(@prefix, @total, @index - 1, @viewTotalColumns, @columnsSeparator);
}

._loopFloatGridColumnSetFill(@prefix, @total, @fill, @index, @viewTotalColumns, @columnsSeparator, @prevRule:~"") when (@index = @total) and (@viewTotalColumns = true) {
    @nextRule : ~".@{prefix}@{index}@{columnsSeparator}@{total}";
    ._loopFloatGridColumnSetFill(@prefix, @total, @fill, @index - 1, @viewTotalColumns, @columnsSeparator, @nextRule);
}._loopFloatGridColumnSetFill(@prefix, @total, @fill, @index, @viewTotalColumns, @columnsSeparator, @prevRule:~"") when (@index = @total) and (@viewTotalColumns = false) {
    @nextRule : ~".@{prefix}@{index}";
    ._loopFloatGridColumnSetFill(@prefix, @total, @fill, @index - 1, @viewTotalColumns, @columnsSeparator, @nextRule);
}._loopFloatGridColumnSetFill(@prefix, @total, @fill, @index, @viewTotalColumns, @columnsSeparator, @prevRule:~"") when (@index > 0) and (@index < @total) and (@viewTotalColumns = true) {
    @nextRule : ~"@{prevRule}, .@{prefix}@{index}@{columnsSeparator}@{total}";
    ._loopFloatGridColumnSetFill(@prefix, @total, @fill, @index - 1, @viewTotalColumns, @columnsSeparator, @nextRule);
}._loopFloatGridColumnSetFill(@prefix, @total, @fill, @index, @viewTotalColumns, @columnsSeparator, @prevRule:~"") when (@index > 0) and (@index < @total) and (@viewTotalColumns = false) {
    @nextRule : ~"@{prevRule}, .@{prefix}@{index}";
    ._loopFloatGridColumnSetFill(@prefix, @total, @fill, @index - 1, @viewTotalColumns, @columnsSeparator, @nextRule);
}
._loopFloatGridColumnSetFill(@prefix, @total, @fill, @index, @viewTotalColumns, @columnsSeparator, @prevRule:~"") when (@fill = "tablet-landscape") and (@index = 0) and (@use-tablet-landscape = true) {
    @media @till-hd-ready {
        // Tablet landscape
        @{prevRule} {
            width: 100%;
        }
    }
}._loopFloatGridColumnSetFill(@prefix, @total, @fill, @index, @viewTotalColumns, @columnsSeparator, @prevRule:~"") when (@fill = "tablet-portrait") and (@index = 0) and (@use-tablet-portrait = true) {
    @media @till-tablet-landscape {
        // Tablet portrait
        @{prevRule} {
            width: 100%;
        }
    }
}._loopFloatGridColumnSetFill(@prefix, @total, @fill, @index, @viewTotalColumns, @columnsSeparator, @prevRule:~"") when (@fill = "smartphone-landscape") and (@index = 0) and (@use-smartphone-landscape = true) {
    @media @till-tablet-portrait {
        // Smartphone landscape
        @{prevRule} {
            width: 100%;
        }
    }
}._loopFloatGridColumnSetFill(@prefix, @total, @fill, @index, @viewTotalColumns, @columnsSeparator, @prevRule:~"") when (@fill = "smartphone-portrait") and (@index = 0) and (@use-smartphone-portrait = true) {
    @media @till-smartphone-landscape {
        // Smartphone portrait
        @{prevRule} {
            width: 100%;
        }
    }
}

._setFloatGridColumns(@columns) {
    width : (100%/@columns);
    &:nth-child(@{columns}n+1) {
        clear : both;
    }
}

._setFloatGridColumnStep(@step, @columns) {
    width : ((100% * @step) / @columns);
}

._setColumnBehavior(@usePosition:true, @float:left, @useBorderBox:true) {
    float          : @float;
    padding-left   : @horizontal-padding;
    padding-right  : @horizontal-padding;
    padding-bottom : @vertical-padding;
}._setColumnBehavior(@usePosition:true, @float:left, @useBorderBox:true) when (@usePosition = true) {
    position : relative;
}._setColumnBehavior(@usePosition:true, @float:left, @useBorderBox:true) when (@useBorderBox = true) {
    .box-sizing(border-box);
}
