.backgroundRetina(
    @defaultImage   ,
    @retinaImage    : @defaultImage,
    @backgroundSize : false,
    @path           : ''

    ) when (@use-root-path = false) {

    //@background-size: auto | px | % |  cover | contain
    //.backgroundRetina("path/image-low-res.png", "path/image-high-res.png");
    ._backgroundRetina(@defaultImage, @retinaImage, @backgroundSize, @path);
}.backgroundRetina(@defaultImage, @retinaImage:@defaultImage, @backgroundSize, @path:@path-img) when (@use-root-path = true) {
    ._backgroundRetina(@defaultImage, @retinaImage, @backgroundSize, @path);
}

._backgroundRetina(@defaultImage, @retinaImage, @backgroundSize, @path) {

    .backgroundImage(@defaultImage, @path);
    .property(background-size, @backgroundSize, 0 0);

    @media @display-retina {
        .backgroundImage(@retinaImage, @path);
    }
}

.backgroundRetinaResponsive(
    @defaultHdFullBackground              ,
    @retinaHdFullBackground               : @defaultHdFullBackground,
    @defaultHdReadyBackground             : @defaultHdFullBackground,
    @retinaHdReadyBackground              : @defaultHdReadyBackground,
    @defaultTabletLandscapeBackground     : @defaultHdReadyBackground,
    @retinaTabletLandscapeBackground      : @defaultTabletLandscapeBackground,
    @defaultTabletPortraitBackground      : @defaultTabletLandscapeBackground,
    @retinaTabletPortraitBackground       : @defaultTabletPortraitBackground,
    @defaultSmartphoneLandscapeBackground : @defaultTabletPortraitBackground,
    @retinaSmartphoneLandscapeBackground  : @defaultSmartphoneLandscapeBackground,
    @defaultSmartphonePortraitBackground  : @defaultSmartphoneLandscapeBackground,
    @retinaSmartphonePortraitBackground   : @defaultSmartphonePortraitBackground,
    @backgroundSize                       : cover,
    @path                             : ''
    ) when (@use-root-path = false) {

    ._backgroundRetinaResponsive(
        @defaultHdFullBackground,
        @retinaHdFullBackground,
        @defaultHdReadyRetinaBackground,
        @retinaHdReadyRetinaBackground,
        @defaultTabletLandscapeBackground,
        @retinaTabletLandscapeBackground,
        @defaultTabletPortraitBackground,
        @retinaTabletPortraitBackground,
        @defaultSmartphoneLandscapeBackground,
        @retinaSmartphoneLandscapeBackground,
        @defaultSmartphonePortraitBackground,
        @retinaSmartphonePortraitBackground,
        @backgroundSize,
        @path
    );

}.backgroundRetinaResponsive(
    @defaultHdFullBackground              ,
    @retinaHdFullBackground               : @defaultHdFullBackground,
    @defaultHdReadyBackground             : @defaultHdFullBackground,
    @retinaHdReadyBackground              : @defaultHdReadyBackground,
    @defaultTabletLandscapeBackground     : @defaultHdReadyBackground,
    @retinaTabletLandscapeBackground      : @defaultTabletLandscapeBackground,
    @defaultTabletPortraitBackground      : @defaultTabletLandscapeBackground,
    @retinaTabletPortraitBackground       : @defaultTabletPortraitBackground,
    @defaultSmartphoneLandscapeBackground : @defaultTabletPortraitBackground,
    @retinaSmartphoneLandscapeBackground  : @defaultSmartphoneLandscapeBackground,
    @defaultSmartphonePortraitBackground  : @defaultSmartphoneLandscapeBackground,
    @retinaSmartphonePortraitBackground   : @defaultSmartphonePortraitBackground,
    @backgroundSize                       : cover,
    @path                             : @path-img
    ) when (@use-root-path = true) {

    ._backgroundRetinaResponsive(
        @defaultHdFullBackground,
        @retinaHdFullBackground,
        @defaultHdReadyBackground,
        @retinaHdReadyBackground,
        @defaultTabletLandscapeBackground,
        @retinaTabletLandscapeBackground,
        @defaultTabletPortraitBackground,
        @retinaTabletPortraitBackground,
        @defaultSmartphoneLandscapeBackground,
        @retinaSmartphoneLandscapeBackground,
        @defaultSmartphonePortraitBackground,
        @retinaSmartphonePortraitBackground,
        @backgroundSize,
        @path
    );
}

._backgroundRetinaResponsive(@defaultHdFullBackground, @retinaHdFullBackground, @defaultHdReadyBackground, @retinaHdReadyBackground, @defaultTabletLandscapeBackground, @retinaTabletLandscapeBackground, @defaultTabletPortraitBackground, @retinaTabletPortraitBackground, @defaultSmartphoneLandscapeBackground, @retinaSmartphoneLandscapeBackground, @defaultSmartphonePortraitBackground, @retinaSmartphonePortraitBackground, @backgroundSize, @path) {

    .property(background-size, @backgroundSize);

    ._setBackgroundRetinaResponsive(@from-smartphone-portrait,  @defaultSmartphonePortraitBackground,  @retina-from-smartphone-portrait,  @retinaSmartphonePortraitBackground,  @path, @use-smartphone-portrait);
    ._setBackgroundRetinaResponsive(@from-smartphone-landscape, @defaultSmartphoneLandscapeBackground, @retina-from-smartphone-landscape, @retinaSmartphoneLandscapeBackground, @path, @use-smartphone-landscape);
    ._setBackgroundRetinaResponsive(@from-tablet-portrait,      @defaultTabletPortraitBackground,      @retina-from-tablet-portrait,      @retinaTabletPortraitBackground,      @path, @use-tablet-portrait);
    ._setBackgroundRetinaResponsive(@from-tablet-landscape,     @defaultTabletLandscapeBackground,     @retina-from-tablet-landscape,     @retinaTabletLandscapeBackground,     @path, @use-tablet-landscape);
    ._setBackgroundRetinaResponsive(@from-hd-ready,             @defaultHdReadyBackground,             @retina-from-hd-ready,             @retinaHdReadyBackground,             @path, @use-hd-ready);
    ._setBackgroundRetinaResponsive(@from-hd-full,              @defaultHdFullBackground,              @retina-from-hd-full,              @retinaHdFullBackground,              @path, @use-hd-full);

}

._setBackgroundRetinaResponsive(@standardViewport, @standardBackground, @retinaViewport, @retinaBackground, @path, @viewportEnabled) when (@viewportEnabled = true) {
    @media @standardViewport {
        .backgroundImage(@standardBackground, @path);
    }
    @media @retinaViewport {
        .backgroundImage(@retinaBackground, @path);
    }
}

.iconRetina(
    @defaultImage ,
    @retinaImage  ,
    @width        ,
    @height       : @width,
    @path     : ''

    ) when (@use-root-path = false) {

    .size(@width, @height);
    .backgroundRetinaIcon(@defaultImage, @retinaImage, @width, @height, @path);
    background-position : center;

}.iconRetina(@defaultImage, @retinaImage, @width, @height:@width, @path:@path-img) when (@use-root-path = true) {
    .size(@width, @height);
    .backgroundRetinaIcon(@defaultImage, @retinaImage, @width, @height, @path);
    background-position : center;
}

.backgroundRetinaIcon(
    @defaultImage ,
    @retinaImage  : @defaultImage,
    @width        : 100%,
    @height       : @width,
    @path     : ''

    ) when (@use-root-path = false) {

    .backgroundImage(@defaultImage, @path);

    background-size   : @width @height;
    background-repeat : no-repeat;

    @media @display-retina {
        .backgroundImage(@retinaImage, @path);
    }
}.backgroundRetinaIcon(
    @defaultImage ,
    @retinaImage  : @defaultImage,
    @width        : 100%,
    @height       : @width,
    @path     : @path-img

    ) when (@use-root-path = true) {

    .backgroundImage(@defaultImage, @path);

    background-size   : @width @height;
    background-repeat : no-repeat;

    @media @display-retina {
        .backgroundImage(@retinaImage, @path);
    }
}

.fillRetinaImage(
    @standardImage  ,
    @retinaImage    : @standardImage,
    @backgroundSize : false,
    @path       : ''

    ) when (@use-root-path = false) {

    .fillImage(@standardImage, @path);
    .property(background-size, @backgroundSize, 0 0);

    @media @display-retina {
        .fillImage(@retinaImage, @path);
    }
}.fillRetinaImage(
    @standardImage  ,
    @retinaImage    : @standardImage,
    @backgroundSize : false,
    @path       : @path-img

    ) when (@use-root-path = true) {

    .fillImage(@standardImage, @path);
    .property(background-size, @backgroundSize, 0 0);

    @media @display-retina {
        .fillImage(@retinaImage, @path);
    }
}
