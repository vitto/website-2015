.addTextColumnGrid(
    @selector                 : text-column-grid,
    @hdFullCount              : 4,
    @hdReadyCount             : 3,
    @tabletLandscapeCount     : 3,
    @tabletPortraitCount      : 2,
    @smartphoneLandscapeCount : 1,
    @smartphonePortraitCount  : 1,
    @columnGap                : @global-step,
    @childrenDisplay          : inline-block
    ) {

    .@{selector} {
        .column-gap(@columnGap);
        .column-fill(balance);
    }

    .@{selector} > * {
        display       : @childrenDisplay; // block will crop and distribute children on columns // inline-block will keep them entire
        margin        : auto;
        margin-bottom : @columnGap;
        width         : 100%;
    }

    ._addTextColumnGrid(@from-smartphone-portrait,  @selector, @smartphonePortraitCount,  @use-smartphone-portrait);
    ._addTextColumnGrid(@from-smartphone-landscape, @selector, @smartphoneLandscapeCount, @use-smartphone-landscape);
    ._addTextColumnGrid(@from-tablet-portrait,      @selector, @tabletPortraitCount,      @use-tablet-portrait);
    ._addTextColumnGrid(@from-tablet-landscape,     @selector, @tabletLandscapeCount,     @use-tablet-landscape);
    ._addTextColumnGrid(@from-hd-ready,             @selector, @hdReadyCount,             @use-hd-ready);
    ._addTextColumnGrid(@from-hd-full,              @selector, @hdFullCount,              @use-hd-full);
}

._addTextColumnGrid(@viewport, @selector, @count, @viewportEnabled) when (@viewportEnabled = true) {
    @media @viewport {
        .@{selector} {
            .column-count(@count);
        }
    }
}
