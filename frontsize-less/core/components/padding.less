.addPaddingRule(
    @selector                   ,
    @hdFullPadding              : 6em,
    @hdReadyPadding             : 5em,
    @tabletLandscapePadding     : 4em,
    @tabletPortraitPadding      : 3em,
    @smartphoneLandscapePadding : 2em,
    @smartphonePortraitPadding  : 1em
    ) {

    ._addPaddingRule(@from-smartphone-portrait,  @selector, @smartphonePortraitPadding);
    ._addPaddingRule(@from-smartphone-landscape, @selector, @smartphoneLandscapePadding);
    ._addPaddingRule(@from-tablet-portrait,      @selector, @tabletPortraitPadding);
    ._addPaddingRule(@from-tablet-landscape,     @selector, @tabletLandscapePadding);
    ._addPaddingRule(@from-hd-ready,             @selector, @hdReadyPadding);
    ._addPaddingRule(@from-hd-full,              @selector, @hdFullPadding);
}

._addPaddingRule(@viewport, @selector, @padding) when (@use-smartphone-portrait = true) {
    @media @viewport {
        .@{selector} {
            padding : @padding;
        }
    }
}

.setViewportsPadding(
    @hdFullPadding              : 6em,
    @hdReadyPadding             : 5em,
    @tabletLandscapePadding     : 4em,
    @tabletPortraitPadding      : 3em,
    @smartphoneLandscapePadding : 2em,
    @smartphonePortraitPadding  : 1em
    ) {

    ._setViewportsPadding(@from-smartphone-portrait,  @smartphonePortraitPadding);
    ._setViewportsPadding(@from-smartphone-landscape, @smartphoneLandscapePadding);
    ._setViewportsPadding(@from-tablet-portrait,      @tabletPortraitPadding);
    ._setViewportsPadding(@from-tablet-landscape,     @tabletLandscapePadding);
    ._setViewportsPadding(@from-hd-ready,             @hdReadyPadding);
    ._setViewportsPadding(@from-hd-full,              @hdFullPadding);
}

._setViewportsPadding(@viewport, @padding) when (@use-smartphone-portrait = true) {
    @media @viewport {
        padding : @padding;
    }
}

.addPaddingSelector(
    @selector          : false,
    @verticalPadding   : @vertical-padding,
    @horizontalPadding : @horizontal-padding

    ) when not (@selector = false) {

    .@{selector}-padding {
        padding : @verticalPadding @horizontalPadding @important;
    }
    .@{selector}-padding-vertical {
        padding-bottom : @verticalPadding @important;
        padding-top : @verticalPadding @important;
    }
    .@{selector}-padding-bottom {
        padding-bottom : @verticalPadding @important;
    }
    .@{selector}-padding-top {
        padding-top : @verticalPadding @important;
    }
    .@{selector}-padding-horizontal {
        padding-left  : @horizontalPadding @important;
        padding-right : @horizontalPadding @important;
    }
    .@{selector}-padding-left {
        padding-left : @horizontalPadding @important;
    }
    .@{selector}-padding-right {
        padding-right : @horizontalPadding @important;
    }
}.addPaddingSelector(
    @selector          : false,
    @verticalPadding   : @vertical-padding,
    @horizontalPadding : @horizontal-padding

    ) when (@selector = false) {

    .with-padding {
        padding: @verticalPadding @horizontalPadding @important;
    }
    .padding-vertical {
        padding-bottom : @verticalPadding @important;
        padding-top    : @verticalPadding @important;
    }
    .padding-bottom {
        padding-bottom : @verticalPadding @important;
    }
    .padding-top {
        padding-top : @verticalPadding @important;
    }
    .padding-horizontal {
        padding-left  : @horizontalPadding @important;
        padding-right : @horizontalPadding @important;
    }
    .padding-left {
        padding-left : @horizontalPadding @important;
    }
    .padding-right {
        padding-right : @horizontalPadding @important;
    }
}
