@mixin font-feature-settings($value:normal){
	@if $use-css-prefix == true{
		@include property(-webkit-font-feature-settings, $value);
	    @include property(-khtml-font-feature-settings,  $value);
	    @include property(-moz-font-feature-settings,    $value);
	    @include property(-ms-font-feature-settings,     $value);
	    @include property(-o-font-feature-settings,      $value);
	}
	@else{
		@include property(font-feature-settings, $value);
	}
}

@mixin font-smoothing($value:false, $forcePrefixes:true) {
	// added @forcePrefixes to prevent font-smoothing to be skipped when use-css-prefix is false, this is for Chrome only for now
	@if $forcePrefixes == true and $value != subpixel-antialiased{
	    @include property(-webkit-font-smoothing, $value);
	    @include property(-khtml-font-smoothing,  $value);
	    @include property(-moz-font-smoothing,    $value);
	    @include property(-ms-font-smoothing,     $value);
	    @include property(-o-font-smoothing,      $value);
 	}
 	@else{
 		@if $use-css-prefix == true and $forcePrefixes != true and $value != subpixel-antialiased{
		    @include property(-webkit-font-smoothing, $value);
		    @include property(-khtml-font-smoothing,  $value);
		    @include property(-moz-font-smoothing,    $value);
		    @include property(-ms-font-smoothing,     $value);
		    @include property(-o-font-smoothing,      $value);
	 	}
 	}
 	// Sets the antialias text for the whole page
    // Values: antialiased | subpixel-antialiased | none
    // this property is not listed in CSS3 specification
    // font-smooth: $value;
}