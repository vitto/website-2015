@mixin addTextColumnGrid(
    $selector             : text-column-grid,
    $hdFullCount          : 4,
    $hdReadyCount         : 3,
    $tabletLandscapeCount : 3,
    $tabletPortraitCount  : 2,
    $mobileLandscapeCount : 1,
    $mobilePortraitCount  : 1,
    $columnGap            : $spacing,
    $childrenDisplay      : inline-block
    ){

    .#{$selector} {
        @include column-gap($columnGap);
        @include column-fill(balance);
    }

    .#{$selector} > * {
        display       : $childrenDisplay; // block will crop and distribute children on columns // inline-block will keep them entire
        margin        : auto;
        margin-bottom : $columnGap;
        width         : 100%;
    }

    @include _addTextColumnGrid($from-mobile-portrait,  $selector, $mobilePortraitCount,  $use-mobile-portrait);
    @include _addTextColumnGrid($from-mobile-landscape, $selector, $mobileLandscapeCount, $use-mobile-landscape);
    @include _addTextColumnGrid($from-tablet-portrait,  $selector, $tabletPortraitCount,  $use-tablet-portrait);
    @include _addTextColumnGrid($from-tablet-landscape, $selector, $tabletLandscapeCount, $use-tablet-landscape);
    @include _addTextColumnGrid($from-hd-ready,         $selector, $hdReadyCount,         $use-hd-ready);
    @include _addTextColumnGrid($from-hd-full,          $selector, $hdFullCount,          $use-hd-full);
}

@mixin _addTextColumnGrid($viewport, $selector, $count, $viewportEnabled){
    @if $viewportEnabled == true {
        @media #{$viewport} {
            .#{$selector} {
                @include column-count($count);
            }
        }
    }
}
